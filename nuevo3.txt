using System;
using System.Data;
using System.Data.SQLite;
using System.Diagnostics;
using System.Windows.Forms;

namespace EM3
{
    [DebuggerDisplay($"{{{nameof(GetDebuggerDisplay)}(),nq}}")]
    public partial class MainForm : Form
    {
        private DataGridView dataGridView1;
        private Button btnCreate;
        private Button btnRead;
        private Button btnUpdate;
        private Button btnDelete;

        // Constructor de la clase MainForm
        public MainForm()
        {
            InitializeComponent();
            LoadData();
            InitializeMenu();
            InitializeCrudButtons();
        }

        private void LoadData()
        {
            string connectionString = "Data Source=Millennium.db;Version=3;";
            string query = "SELECT * FROM personajes"; // Cambia "personajes" por la tabla que desees mostrar

            using (SQLiteConnection connection = new SQLiteConnection(connectionString))
            {
                connection.Open();
                using (SQLiteDataAdapter adapter = new SQLiteDataAdapter(query, connection))
                {
                    DataTable dataTable = new DataTable();
                    adapter.Fill(dataTable);
                    dataGridView1.DataSource = dataTable; // Asegúrate de que dataGridView1 es el nombre de tu DataGridView
                    AdjustDataGridViewSize();
                }
            }
        }

        private void InitializeMenu()
        {
            // Crear el menú
            MenuStrip menuStrip = new MenuStrip();
            ToolStripMenuItem databaseMenuItem = new ToolStripMenuItem("Base de Datos");
            menuStrip.Items.Add(databaseMenuItem);

            // Obtener las tablas de la base de datos
            string connectionString = "Data Source=Millennium.db;Version=3;";
            using (SQLiteConnection connection = new SQLiteConnection(connectionString))
            {
                connection.Open();
                DataTable tables = connection.GetSchema("Tables");

                foreach (DataRow row in tables.Rows)
                {
                    string tableName = row["TABLE_NAME"].ToString();
                    ToolStripMenuItem tableMenuItem = new ToolStripMenuItem(tableName);
                    tableMenuItem.Click += (sender, e) => OpenTable(tableName);
                    databaseMenuItem.DropDownItems.Add(tableMenuItem);
                }
            }
            // Agregar el menú al formulario
            this.MainMenuStrip = menuStrip;
            this.Controls.Add(menuStrip);
        }

        private void OpenTable(string tableName)
        {
            string connectionString = "Data Source=Millennium.db;Version=3;";
            string query = $"SELECT * FROM {tableName}";
            using (SQLiteConnection connection = new SQLiteConnection(connectionString))
            {
                connection.Open();
                using (SQLiteDataAdapter adapter = new SQLiteDataAdapter(query, connection))
                {
                    DataTable dataTable = new DataTable();
                    adapter.Fill(dataTable);
                    dataGridView1.DataSource = dataTable;
                    AdjustDataGridViewSize();
                }
            }
        }

        private void AdjustDataGridViewSize()
        {
            dataGridView1.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
            dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
        }

        private void InitializeCrudButtons()
        {
            // Crear botones CRUD
            btnCreate = new Button { Text = "Crear", Left = 10, Top = 10, Width = 80 };
            btnRead = new Button { Text = "Leer", Left = 100, Top = 10, Width = 80 };
            btnUpdate = new Button { Text = "Actualizar", Left = 190, Top = 10, Width = 80 };
            btnDelete = new Button { Text = "Eliminar", Left = 280, Top = 10, Width = 80 };

            // Agregar eventos a los botones
            btnCreate.Click += BtnCreate_Click;
            btnRead.Click += BtnRead_Click;
            btnUpdate.Click += BtnUpdate_Click;
            btnDelete.Click += BtnDelete_Click;

            // Agregar botones al formulario
            this.Controls.Add(btnCreate);
            this.Controls.Add(btnRead);
            this.Controls.Add(btnUpdate);
            this.Controls.Add(btnDelete);
        }

        private void BtnCreate_Click(object sender, EventArgs e)
        {
            // Lógica para crear un nuevo registro
            string connectionString = "Data Source=Millennium.db;Version=3;";
            string query = "INSERT INTO personajes (Nombre, Edad) VALUES ('Nuevo Personaje', 0)"; // Cambia la tabla y los campos según sea necesario

            using (SQLiteConnection connection = new SQLiteConnection(connectionString))
            {
                connection.Open();
                using (SQLiteCommand command = new SQLiteCommand(query, connection))
                {
                    command.ExecuteNonQuery();
                }
            }
            LoadData();
        }

        private void BtnRead_Click(object sender, EventArgs e)
        {
            // Lógica para leer los registros (ya implementada en LoadData)
            LoadData();
        }

        private void BtnUpdate_Click(object sender, EventArgs e)
        {
            // Lógica para actualizar un registro seleccionado
            if (dataGridView1.SelectedRows.Count > 0)
            {
                string connectionString = "Data Source=Millennium.db;Version=3;";
                string id = dataGridView1.SelectedRows[0].Cells["Id"].Value.ToString(); // Cambia "Id" por el nombre de la columna de ID
                string query = $"UPDATE personajes SET Nombre = 'Personaje Actualizado', Edad = 1 WHERE Id = {id}"; // Cambia la tabla y los campos según sea necesario

                using (SQLiteConnection connection = new SQLiteConnection(connectionString))
                {
                    connection.Open();
                    using (SQLiteCommand command = new SQLiteCommand(query, connection))
                    {
                        command.ExecuteNonQuery();
                    }
                }
                LoadData();
            }
        }

        private void BtnDelete_Click(object sender, EventArgs e)
        {
            // Lógica para eliminar un registro seleccionado
            if (dataGridView1.SelectedRows.Count > 0)
            {
                string connectionString = "Data Source=Millennium.db;Version=3;";
                string id = dataGridView1.SelectedRows[0].Cells["Id"].Value.ToString(); // Cambia "Id" por el nombre de la columna de ID
                string query = $"DELETE FROM personajes WHERE Id = {id}"; // Cambia la tabla según sea necesario

                using (SQLiteConnection connection = new SQLiteConnection(connectionString))
                {
                    connection.Open();
                    using (SQLiteCommand command = new SQLiteCommand(query, connection))
                    {
                        command.ExecuteNonQuery();
                    }
                }
                LoadData();
            }
        }

        private string GetDebuggerDisplay()
        {
            return ToString();
        }
    }
}
